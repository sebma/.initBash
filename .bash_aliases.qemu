# vim: set ft=bash noet:
! declare 2>&1 | grep -wq ^colors= && [ $BASH_VERSINFO -ge 4 ] && source $initDir/.colors
test "$debug" -gt 0 && echo "=> Running $bold${colors[blue]}$(basename ${BASH_SOURCE[0]})$normal ..."

qemu=qemu-system-$(arch)
if which $qemu >/dev/null 2>&1;then
	bridgeInterface=$(\ls /sys/class/net | egrep -v "(eth|wlan|tap)[0-9]|lo")
	which kvm >/dev/null 2>&1 && kvm=kvm || kvm="$qemu -enable-kvm"
	kvmBoot="sudo -b $kvm -m 1G -net bridge,br=$bridgeInterface -net nic,model=virtio -redir tcp:2222::22"
	kvmBootWithOldNIC="sudo -b $kvm -m 1G -net bridge,br=$bridgeInterface -net nic,model=pcnet -redir tcp:2222::22"
	alias testLiveIso_BIOS="$kvmBoot -cdrom"
	alias testLiveIso_UEFI="$kvmBoot -bios /usr/share/qemu/OVMF.fd -cdrom"
	alias testLiveUSB_BIOS="$kvmBoot -hda"
	alias testLiveUSB_UEFI="$kvmBoot -bios /usr/share/qemu/OVMF.fd -hda"
	alias virtualisation="kvm-ok.sh"
	grep -q $bridgeInterface /etc/qemu/bridge.conf 2>/dev/null || echo "=> INFO : You need to add: allow $bridgeInterface to your /etc/qemu/bridge.conf file."
	unset bridgeInterface
fi

set +x
test "$debug" -gt 0 && echo "=> END of $bold${colors[blue]}$(basename ${BASH_SOURCE[0]})$normal"
