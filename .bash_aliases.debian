# vim: set ft=bash noet:

! declare 2>&1 | grep -wq ^colors= && [ $BASH_VERSINFO -ge 4 ] && source $initDir/.colors
test "$debug" -gt 0 && \echo "=> Running $bold${colors[blue]}$(basename ${BASH_SOURCE[0]})$normal ..."

#alias installSecurityUpdates="sudo apt install -V $(apt-get -s dist-upgrade | awk "/^Inst.*\/$codeName-security/"'{print$2}')"
apt="LC_MESSAGES=C $(which apt 2>/dev/null)"
aptGet="LC_MESSAGES=C $(which apt-get 2>/dev/null)"
alias autoremove="$apt -h 2>&1 | \grep -wq autoremove && $aptGet autoremove -s | \grep '[^0][0-9]* to remove' && sudo screen -L $apt autoremove -V || ( $aptGet autoremove -s | \grep '[^0][0-9]* to remove' && sudo screen -L $aptGet autoremove -V )"
alias cleanupOldKernels="\linux-purge -k 2 -s | grep ', [^0] to remove' && sudo screen -L \linux-purge -k 2"
alias debInfo="\dpkg -I"
alias debExport="\sudo dpkg-repack"
alias debExtract="\dpkg-deb -x"
alias debContents="\dpkg-deb -c"
alias dupdatedb="time \sudo update-dlocatedb"
alias full-upgrade="sudo $apt full-upgrade -V --download-only && sync && sudo screen -L $apt full-upgrade -V --yes;sync"
alias installSecurityUpdates="\apt list --upgradable 2>/dev/null | awk -F/ '/security/{packages=packages\" \"\$1}END{if(packages){commandLine=\"sudo screen -L apt install -V -y\"packages;print commandLine >\"/dev/stderr\";print commandLine;}}' | sh"
alias kdeVersion="dpkg -l | awk -F'[:-]' '/plasma-desktop\s/{print \$3}'"
alias linux-purge="screen -L linux-purge"
alias reinstall="sudo screen -L $apt install --reinstall -V"
alias update="time sudo $apt update;$apt list --upgradable"
alias upgradable="$apt list --upgradable"
alias upgrade="$aptGet upgrade -s | \grep '^[^0][0-9]* upgraded' && sudo $apt upgrade -V --download-only && sync && sudo screen -L $apt upgrade -V --yes;sync"

set +x
test "$debug" -gt 0 && \echo "=> END of $bold${colors[blue]}$(basename ${BASH_SOURCE[0]})$normal"
