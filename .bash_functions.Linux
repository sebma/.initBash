# vim: set syn=sh noet:
declare -A | grep -wq colors || source $initDir/.colors
test "$debug" -gt 0 && echo "=> Running $bold${colors[blue]}$(basename ${BASH_SOURCE[0]})$normal ..."

test -f /etc/debian_version && Source $initDir/.bash_functions.Debian # Si c'est un Linux de type Debian

function ytdlUpdateFromGit {
	typeset -r isAdmin=$(groups 2>/dev/null | \egrep -wq "sudo|adm|admin|root" && echo true || echo false)
	local ytdlPackageURL=git+https://github.com/rg3/youtube-dl
	local sudo=""
	if $isAdmin
	then
		sudo="command sudo -H"
	fi
	local ytdlPythonVersion=$(youtube-dl -v 2>&1 | awk -F "[ .]" '/Python version/{printf$4"."$5}')
	$sudo $(which pip$ytdlPythonVersion) install -U $ytdlPackageURL
}
function ytdlUpdate {
	typeset -r isAdmin=$(groups 2>/dev/null | \egrep -wq "sudo|adm|admin|root" && echo true || echo false)
	local ytdlPackageURL=youtube-dl
	local sudo=""
	if $isAdmin
	then
		sudo="command sudo -H"
	fi
	local ytdlPythonVersion=$(youtube-dl -v 2>&1 | awk -F "[ .]" '/Python version/{printf$4"."$5}')
	$sudo $(which pip$ytdlPythonVersion) install -U $ytdlPackageURL
}
function topf {
	$find . $prunePathsFindExpression -xdev -type f -size +10M -exec ls -l --block-size=M --time-style=+"%Y-%m-%d %T" {} \; 2>/dev/null | sort -nrk5 | column -t | head -n "$1" | awk '{total+=$5;print}END{print"=> total = "total" MiB"}'
}
function topflines {
	$find "$@" $prunePathsFindExpression -xdev -type f -size +10M -exec ls -l --block-size=M --time-style=+"%Y-%m-%d %T" {} \; 2>/dev/null | sort -nrk5 | column -t | head -n $(($LINES-4)) | awk '{total+=$5;print}END{if(total) print"=> total = "total" MiB"}'
}
function umount {
	local dir_or_device="$1"
	local device
	test "$dir_or_device" && {
		device=$(LC_MESSAGES=C \df "$dir_or_device" | awk '!/Filesystem/{print$1}')
		mountDIR=$(LC_MESSAGES=C \df "$dir_or_device" | awk '!/Filesystem/{$1=$2=$3=$4=$5="";gsub("^ +","");print}')
		echo "=> Unmounting $device ..." >&2
		command umount -v "$@" || command umount.udisks2 "$@"  || command umount.udisks "$@" || sudo $(which umount) -v "$@"
		echo "=> ls $(dirname "$mountDIR") :"
		ls $(dirname "$mountDIR")
	}
}
function mountISO {
	loopBackDevice=$(udisksctl loop-setup -r -f "$1" | awk -F "[ .]" '{print$(NF-1)}')
	udisksctl mount -b $loopBackDevice
}
function umountISO {
	loopBackDevice=$(sudo losetup -a | grep $1 | cut -d: -f1)
	test -z $loopBackDevice && loopBackDevice=$1
	udisksctl unmount -b $loopBackDevice
	udisksctl loop-delete -b $loopBackDevice
}
function locate {
	local locate="command locate"
	groups 2>/dev/null | \egrep -wq "sudo|admin" && locateOptions="-e" || locateOptions="--database $HOME/.local/lib/mlocate/mlocate.db -e"
	echo "$@" | \grep -q "\-[a-z]*r" && $locate $locateOptions "$@" || $locate $locateOptions -i --regex "${@}"
}
function open {
	local openCommand="command xdg-open"
	[ $# = 0 ] && set -- .
	for file
	do
		$openCommand "$file" 2>&1 | \egrep -v "MBuntu-Y-For-Unity"
	done
}
function lanip {
	ethName=$1
	if [ -n "$ethName" ]
	then
		printf "$ethName: "
		\ip addr show dev $ethName | awk '/inet /{print$2}'
	else
		\ip addr show | awk '{if(/(UP|UNKNOWN)/){interface=$2;found=1}else if(/DOWN/)found=0;if(found==1 && /inet /)print interface" "$2}'
	fi
}
function mac@ {
	ethName=$1
	if [ -n "$ethName" ]
	then
		printf "$ethName: "
		\ip addr show dev $ethName | awk '/ether/{print$2}'
	else
		\ip addr show | awk '{if(/(UP|UNKNOWN)/){interface=$2;found=1}else if(/DOWN/)found=0;if(found==1 && /ether/)print interface" "$2}'
	fi
}
function brewInstall {
	which brew >/dev/null 2>&1 || sh -c "$(\curl -fsSL https://raw.githubusercontent.com/Linuxbrew/install/master/install.sh)"
	which brew >/dev/null || return 1
	brew update
}

set +x
test "$debug" -gt 0 && echo "=> END of $bold${colors[blue]}$(basename ${BASH_SOURCE[0]})$normal"
