# vim: set ft=bash noet:
declare -A | grep -wq colors || source $initDir/.colors
test "$debug" -gt 0 && echo "=> Running $bold${colors[blue]}$(basename ${BASH_SOURCE[0]})$normal ..."

[ $osFamily = Linux ] && [ -c /dev/fb0 ] && tty | egrep -q "/dev/tty[0-9]+" && mpvDefaultOptions="--vo=drm" && mplayerDefaultOptions="--vo=fbdev2"

export mpv_Output_Perl_Script="'\$| = 1;s/\n/\r/g if \$_ =~ /AV: /;s/Saving state/\nSaving state/'" # On l'export pour qu'elle soit accessible du processus fils

mpv="$(which mpv)"
alias mpv="LANG=en_US.utf8 $mpv $mpvDefaultOptions"
mpvnoconfig="mpv --no-config"
alias mpvnoconfig="$mpvnoconfig"

mplayer="$(which mplayer)"
alias mplayer="LANG=en_US.utf8 $mplayer $mplayerDefaultOptions"
mplayernoconfig="mplayer --noconfig=user"
alias mplayernoconfig="$mplayernoconfig"

alias mpvh="mpv --profile=hid"
alias mpvid="mpv --profile=identify"

alias mpvBEST='mpv --profile=best'
alias mpvFHD='mpv  --profile=fhd'
alias mpvHD='mpv   --profile=hd'
alias mpvHQ='mpv   --profile=hq'
alias mpvFSD='mpv  --profile=fsd'
alias mpvSD='mpv   --profile=sd'
alias mpvLD='mpv   --profile=ld'
alias mpvVLD='mpv  --profile=vld'
alias mpvFASTER='mpv --profile=for_slow_hardware'

alias mpvplaylistBEST='mpvplaylist --profile=best'
alias mpvplaylistFHD='mpvplaylist --profile=fhd'
alias mpvplaylistHD='mpvplaylist --profile=hd'
alias mpvplaylistHQ='mpvplaylist --profile=hq'
alias mpvplaylistFSD='mpvplaylist --profile=fsd'
alias mpvplaylistSD='mpvplaylist --profile=sd'
alias mpvplaylistLD='mpvplaylist --profile=ld'
alias mpvplaylistVLD='mpvplaylist --profile=vld'

alias mpvFrench="mpv --profile=french"
alias mpvEnglish="mpv --profile=english"
alias mpvGerman="mpv --alang=deu --slang=deu"
alias mpvSpanish="mpv --alang=spa --slang=spa"

#youtube_dl="eval LANG=C.UTF-8 command youtube-dl" # i.e https://unix.stackexchange.com/questions/505733/ # eval A EVITER
alias youtube-dl="LANG=C.UTF-8 command youtube-dl"
alias ytdl="LANG=C.UTF-8 command youtube-dl"

function cleanMPVStatusLine {
	perl -pe $mpv_Output_Perl_Script
}
function mpv2 {
	local mpv="$(which mpv)"
	local mpvOptions="$mpvDefaultOptions"
	local ytdl_format
	for url
	do
		domain=$(echo "$url" | sed "s/https?:..//" | awk -F. '{print$(NF-1)}')
		case $domain in
			dailymotion)
				ytdl_format=$(ytdlnoconfig -F "$url" | awk '/^hls/{last=$1}END{print last}')
				mpvOptions="--ytdl-format=$ytdl_format $mpvOptions"
			;;
			*) ;;
		esac
		LANG=en_US.utf8 $mpv "$mpvOptions" "$url"
	done
}
function mpvFORMAT {
	\rm nohup.out
	touch nohup.out
	nohup $mpv --ytdl-format "$@" &
	tail -f nohup.out | egrep -v "AV: "
}
function mpvInit {
	if [ -c /dev/fb0 ]; then
		if [ ! -w /dev/fb0 ]
		then
			\sudo chmod g+w /dev/fb0
			if ! groups | \grep -wq video
			then
				echo "=> INFO: Adding $USER in the video group and logging in to the new <video> group." 1>&2
				\sudo adduser $USER video
				\sudo newgrp - video
			fi
		fi
	else
		echo "=> Function $FUNCNAME - ERROR: Framebuffer is not supported in this configuration." 1>&2
		return 1
	fi
}
function mpvOld {
	$mpv $(youtube-dl -g "$@")
}
function mpvRSSPodCastPlayList {
	test $# = 1 && {
		local url="$1"
#		mpv $(youtube-dl -g "$url")
		mpv $(curl -s "$url" | egrep -o "https?:[^ <>]*(mp4|webm)" | grep -v .google.com/ | uniq)
	}
}
function mpvalt {
	test $1 && $mpv --no-ytdl $(youtube-dl -gf best $@ | uniq)
}
function mpvdirectly {
	\rm nohup.out
	touch nohup.out
	nohup $mpv --no-ytdl "$@" &
	tail -f nohup.out | egrep -v "AV: "
}
function mpvlive {
	\rm nohup.out
	touch nohup.out
	nohup $mpv --no-resume-playback "$@" &
	tail -f nohup.out | egrep -v "AV: "
}
function mpvlocal {
	mpvdirectly "$@"
}
function mpvplaylist {
	\rm nohup.out
	touch nohup.out
	local playListFile="$1" playlistStartIndex="" index=1
	local format="mp4[height<=480]/mp4/best"
	test $# = 1 && shift
	test $# = 2 && playlistStartIndex="--playlist-start=$1" && playListFile="$2" && index=$(($1+1)) && shift 2
	local playListType=${playListFile/*./}
	if [ $playListType = url ] || [ $playListType = urls ]
	then
		\sed -n "${index}s/^[^#]*//;${index}p" "$playListFile"
		awk '{print$1}' "$playListFile" > "${playListFile/.*/__no-title.urls}"
		$mpv --ytdl-format "$format" $playlistStartIndex --playlist "${playListFile/.*/__no-title.urls}" -- "$@"
		\rm "${playListFile/.*/__no-title.urls}"
	else
		$mpv --ytdl-format "$format" $playlistStartIndex --playlist "$playListFile" -- "$@"
	fi
	tail -f nohup.out | egrep -v "AV: "
}
function mpvplaylistFORMAT {
	\rm nohup.out
	touch nohup.out
	local format
	local playlist
	echo -- $1 | \grep -q -- "--" && format="$1" && playlist="$2" && shift || playlist="$1"
	shift
	nohup $mpv "$firstArg" --ytdl-format "$format" --playlist "$playlist" "$@" &
	tail -f nohup.out | egrep -v "AV: "
}
function urlplayer {
	$mpv $(youtube-dl -gf best "$1")
}

set +x
test "$debug" -gt 0 && echo "=> END of $bold${colors[blue]}$(basename ${BASH_SOURCE[0]})$normal"
