# vim: set syn=sh noet:

mpvnoconfig="command mpv --no-config"
alias mpvnoconfig="$mpvnoconfig"
#mpvOptions='--geometry 0%:100% --ytdl-raw-options=sub-lang="en,eng,enUS,en-US,fr",write-sub=,abort-on-error='
mpv="$(which mpv) --geometry 0%:100% --ytdl-raw-options=sub-lang=\"en,eng,enUS,en-US,fr\",write-sub=,abort-on-error="

export mpv_Output_Perl_Script="'\$| = 1;s/\n/\r/g if \$_ =~ /AV: /;s/Saving state/\nSaving state/'"
mpvOptionsForBackgroundPlaying="--quiet"

FHD_Format="bestvideo[height<=?1080]+bestaudio[acodec=opus]/bestvideo[height<=?1080]+m4a/bestvideo+bestaudio/best"
HD_Format="bestvideo[height<=?720]+bestaudio[acodec=opus]/bestvideo[height<=?720]+m4a/bestvideo+bestaudio/hd/best"
FSD_Format="bestvideo[height<=?480]+bestaudio[acodec=opus]/bestvideo[height<=?480]+m4a/bestvideo+bestaudio/sd/best"
SD_Format="bestvideo[height<=?360]+bestaudio[acodec=opus]/bestvideo[height<=?360]+m4a/bestvideo+bestaudio/sd/best"
LD_Format="bestvideo[height<=?240]+bestaudio[acodec=opus]/bestvideo[height<=?240]+m4a/bestvideo+bestaudio/low/best"
VLD_Format="bestvideo[height<=?144]+bestaudio[acodec=opus]/bestvideo[height<=?144]+m4a/bestvideo+bestaudio/low/best"

alias mpvBEST='mpvFORMAT best'
alias mpvFHD='mpvFORMAT "$FHD_Format"'
alias mpvHD='mpvFORMAT "$HD_Format"'
alias mpvFSD='mpvFORMAT "$FSD_Format"'
alias mpvSD='mpvFORMAT "$SD_Format"'
alias mpvLD='mpvFORMAT "$LD_Format"'
alias mpvVLD='mpvFORMAT "$VLD_Format"'

alias mpvplaylistBEST='mpvplaylistFORMAT best'
alias mpvplaylistFHD='mpvplaylistFORMAT "$FHD_Format"'
alias mpvplaylistHD='mpvplaylistFORMAT "$HD_Format"'
alias mpvplaylistFSD='mpvplaylistFORMAT "$FSD_Format"'
alias mpvplaylistSD='mpvplaylistFORMAT "$SD_Format"'
alias mpvplaylistLD='mpvplaylistFORMAT "$LD_Format"'
alias mpvplaylistVLD='mpvplaylistFORMAT "$VLD_Format"'

function mpv {
	which mpv >/dev/null && {
	if [ $os = Linux ]
		then
	#		for urlOrFile; do
	#			echo $urlOrFile | egrep -q "(http|ftp)s?://" && $youtube_dl -qs $urlOrFile 2>&1 | grep --color=auto --color -A1 ^ERROR: && continue
				if tty | egrep -q "/dev/pts/[0-9]|/dev/ttys[0-9]+"
				then # Si on est dans une fenetre de terminal
					$mpv "$@"
				else # Si on est dans une console
					echo "=> INFO: You are in a console terminal, therefore framebuffering will be used." >&2
					if [ -c /dev/fb0 ]; then
						if [ ! -w /dev/fb0 ]
						then
							\sudo chmod g+w /dev/fb0
							groups | grep -wq video || { echo "=> INFO: Adding $USER in the video group and logging out." >&2 ; \sudo adduser $USER video;sleep 3; exit; }
						fi
						$(which mpv) -vo drm "$@"
					else
						echo "=> Function $FUNCNAME - ERROR: Framebuffer is not supported in this configuration." 1>&2
						return 1
					fi
				fi
	#		done
		elif [ $os = Darwin ]
		then
			$(which mpv) "$@"
		fi
	}
}
function mpvFORMAT {
	\rm nohup.out
	touch nohup.out
	nohup $mpv --ytdl-format "$@" &
	tail -f nohup.out | egrep -v "AV: "
}
function mpvdirectly {
	\rm nohup.out
	touch nohup.out
	nohup $mpv --no-ytdl "$@" &
	tail -f nohup.out | egrep -v "AV: "
}
function mpvlive {
	\rm nohup.out
	touch nohup.out
	nohup $mpv --no-resume-playback "$@" &
	tail -f nohup.out | egrep -v "AV: "
}
function mpvlocal {
	mpvdirectly "$@"
}
function mpvplaylist {
	\rm nohup.out
	touch nohup.out
	nohup $mpv --playlist "$@" &
	tail -f nohup.out | egrep -v "AV: "
}
function mpvplaylistFORMAT {
	\rm nohup.out
	touch nohup.out
	local format="$1"
	shift
	nohup $mpv --ytdl-format "$format" --playlist "$@" &
	tail -f nohup.out | egrep -v "AV: "
}
