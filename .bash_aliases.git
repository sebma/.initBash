# vim: set ft=sh noet:

! declare 2>&1 | grep -wq ^colors= && [ $BASH_VERSINFO -ge 4 ] && source $initDir/.colors
test "$debug" -gt 0 && \echo "=> Running $bold${colors[blue]}$(basename ${BASH_SOURCE[0]})$normal ..."

alias git-ls=gitls
alias gitCompareLocalRemote="\git fetch && \git diff origin"
alias gitConf-alias.ci="git config alias.ci '!f() { cd \${GIT_PREFIX:-.}; for file; do git commit -uno \$file -m \"Updated \$file\"; done; }; f';git config alias.ci"
alias gitConf-alias.cipart="git config alias.cipart '!f() { cd \${GIT_PREFIX:-.}; for file; do git commit -uno -p \$file -m \"Partially updated \$file\"; done; }; f';git config alias.cipart"
alias gitConf="\git config -l"
alias gitEditConfig='\git config --edit'
alias gitHTTP_URL='\git config remote.origin.url | \sed -E "s|^git@|https://|;s|(\.\w+):|\1/|"'
alias gitLastRelease='\git describe --tags --abbrev=0'
alias gitLocalUndelete="\git ls-files -d | grep . && \git ls-files -d | \xargs git checkout-index"
alias gitLocalProjectName='basename -s .git $(git rev-parse --show-toplevel)'
alias gitPageTitle='echo $(\curl -qs $(gitHTTP_URL) | pup --charset utf8 "title text{}" | cut -d: -f2-)'
alias gitRemoteProjectName='basename -s .git $(git config remote.origin.url)'
alias gitRemoteRepoLastRelease='\git ls-remote --tags --refs | awk -F/ "{print\$NF}" | sort -rV | head -1'
alias gitStatus="\git status -bs -uno"
alias gitURL='\git config remote.origin.url'
alias gitURLs='\git config -l | awk -F= /^remote.*\.url=/{print\$2}'
alias gitUnIgnoreChanges="\git update-index --no-skip-worktree"
alias gitUpdate="\git config remote.origin.url | \awk '/github.com/{print\"=> Updating from <\"\$NF\"> ...\"}';\git pull;sync"
alias gitlog="\git log --abbrev-commit"
alias gitls="\git ls-files"
alias gitshow="\git show --abbrev-commit"
alias openGit_http_URL='open $(gitHTTP_URL)'
alias openGit_http_URL_in_CWD='open $(gitHTTP_URL)/$(pwd | \sed "s|$(git rev-parse --show-toplevel)|tree/master|")'
alias updateGIT=gitUpdate

set +x
test "$debug" -gt 0 && \echo "=> END of $bold${colors[blue]}$(basename ${BASH_SOURCE[0]})$normal"
