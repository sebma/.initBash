# vim: set syn=sh noet:
declare -A | grep -wq colors || source $initDir/.colors
test "$debug" '>' 0 && \echo "=> Running $bold${colors[blue]}$(basename ${BASH_SOURCE[0]})$normal ..."

alias git-ls=gitls
alias gitCompareLocalRemote="\git fetch && \git diff origin"
alias gitConf-alias.ci="git config alias.ci '!f() { cd \${GIT_PREFIX:-.}; for file; do git commit -uno \$file -m \"Updated \$file\"; done; }; f';git config alias.ci"
alias gitConf-alias.cipart="git config alias.cipart '!f() { cd \${GIT_PREFIX:-.}; for file; do git commit -uno -p \$file -m \"Partially updated \$file\"; done; }; f';git config alias.cipart"
alias gitConf="\git config -l"
alias gitEditConfig='\git config --local -e'
alias gitHTTP='\git config --get-all remote.origin.url | \grep http'
alias gitLocalUndelete="\git ls-files -d | grep . && \git ls-files -d | \xargs git checkout-index"
alias gitRemoteRepoLastRelease='\git ls-remote --tags --sort="version:refname" | awk -F/ '\''END{print gensub(/\^\{\}/,"","",$NF)}'\'''
alias gitLastRelease='\git describe --tags --abbrev=0'
alias gitStatus="\git status -bs -uno"
alias gitURL='\git config remote.origin.url'
alias gitURLs='\git config -l | awk -F= /^remote.*\.url=/{print\$2}'
alias gitUnIgnoreChanges="\git update-index --no-skip-worktree"
alias gitUpdate="\git config remote.origin.url | \awk '/github.com/{print\"=> Updating from <\"\$NF\"> ...\"}';\git pull"
alias gitlog="\git log --abbrev-commit"
alias gitls="\git ls-files"
alias gitshow="\git show --abbrev-commit"
alias openGit_http_URL='open $(gitHTTP)'
alias updateGIT="\git pull"

set +x
test "$debug" '>' 0 && \echo "=> END of $bold${colors[blue]}$(basename ${BASH_SOURCE[0]})$normal"
