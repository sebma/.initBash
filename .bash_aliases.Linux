#!sh
declare -A | grep -wq colors || source $initDir/.colors
test "$debug" '>' 0 && echo "=> Running $bold${colors[blue]}$(basename ${BASH_SOURCE[0]})$normal ..."

#wifiInterface="$(which iwconfig >/dev/null 2>&1 && iwconfig 2>/dev/null | awk '/^[^ \t]/ { if ($1 ~ /^[0-9]+:/) { print $2 } else { print $1 } }' || ( which iw >/dev/null 2>&1 && iw dev | awk '/Interface/{lastInterface=$NF}END{print lastInterface}') )"
#wifiInterface="$(iwconfig 2>/dev/null | awk '/^[^ \t]/ { if ($1 ~ /^[0-9]+:/) { print $2 } else { print $1 } }' | iw dev 2>/dev/null | awk '/Interface/{lastInterface=$NF}END{print lastInterface}')"
wifiInterface=$(iwconfig 2>/dev/null | grep -v ESSID:off/any | awk '/ESSID/{print$1}')

#alias lpr="\lpr -P ppti-14-503-imp -o PageSize=A4 -o PageRegion=A4 -o Resolution=default -o InputSlot=Tray2 -o Duplex=DuplexNoTumble -o PreFilter=No"
#alias lpr="\lpr -o PageSize=A4 -o PageRegion=A4 -o Resolution=default -o InputSlot=Tray2 -o Duplex=DuplexNoTumble -o PreFilter=No"

findExcludedPathList="./proc ./sys ./dev"
prunePathsFindExpression=$(printf " -path %s -prune -o" $findExcludedPathList)
duExcludedPathList="./proc ./sys ./dev"
excludePathsDuExpression=$(printf " --exclude %s" $duExcludedPathList)

test $wifiInterface && alias wifiList="which nmcli >/dev/null && \nmcli con || iw dev $wifiInterface scan || iwlist $wifiInterface scan"
test $wifiInterface && alias wifiSpeed="\iwlist $wifiInterface bitrate;\iw dev $wifiInterface link"
test $wifiInterface && alias restartWifi="which nmcli >/dev/null && \nmcli nm wifi off;nmcli nm wifi on;sleep 10;wanip"
test $wifiInterface && alias wifiRestart=restartWifi

alias catFiles="\tail -vn +1"
alias connect2MyHiddenWifi="time nmcli con up id sebWlan && wanip"
alias connect2eduroam="time nmcli con up id eduroam && wanip"
alias connect2SSID="time nmcli con up id"
alias cp='\cp --preserve=timestamps -uv'
alias df="\df -PTh"
#which ccze >/dev/null 2>&1 && alias ccze="\ccze -A" && alias dmesg="\ccze -A < /var/log/dmesg"
#alias dmesg="\grc less /var/log/dmesg"
alias firefoxDefrag='pgrep firefox || time $(which find) ~/.mozilla/firefox/ -name "*sqlite" -ls -exec sqlite3 -echo {} vacuum \;'
alias l="ls --color"
alias ll="ls -blF --time-style=+'%Y-%m-%d %T'"
alias llk="ll --block-size=K"
alias llm="ll --block-size=M"
alias ls="ls --color -F"
alias lsgpu="\lspci -nns \$(\lspci | awk '/Display|VGA/{print\$1}')"
alias lsvga=lsgpu
alias mmcSize="awk '/[0-9]/{print FILENAME\": \"\$1/(2*1024^2)\" GiB\"}' /sys/class/block/mmcblk?/size"
alias mmcInfo="tail -vn +1 /sys/class/block/mmcblk0/device/driver/mmc*/uevent"
alias nmStatus="\service network-manager status"
#alias os="\lsb_release -sd"
alias pip_pypy="\pypy -m pip"
alias pip_pypy3="\pypy3 -m pip"
alias Pgrep="\grep -P"
alias pkill='\pkill -efu $USER'
alias quota="\quota -s"
alias rsync='time \rsync -uth -P -z --skip-compress=$RSYNC_SKIP_COMPRESS_LIST $RSYNC_EXCLUSION'
alias scp='time \rsync -h --progress -u -zt --skip-compress=$RSYNC_SKIP_COMPRESS_LIST $RSYNC_EXCLUSION'
alias topf10='$(which find) . $prunePathsFindExpression -xdev -type f -size +10M -exec ls -l --block-size=M --time-style=+"%Y-%m-%d %T" {} \; 2>/dev/null | sort -nrk5 | column -t | head -10 | awk '\''{total+=$5;print}END{print"=> total = "total" MiB"}'\'''
alias topf50='$(which find) . $prunePathsFindExpression -xdev -type f -size +10M -exec ls -l --block-size=M --time-style=+"%Y-%m-%d %T" {} \; 2>/dev/null | sort -nrk5 | column -t | head -50 | awk '\''{total+=$5;print}END{print"=> total = "total" MiB"}'\'''
alias topf5='$(which find) . $prunePathsFindExpression -xdev -type f -size +10M -exec ls -l --block-size=M --time-style=+"%Y-%m-%d %T" {} \; 2>/dev/null | sort -nrk5 |  column -t | head -5 | awk '\''{total+=$5;print}END{print"=> total = "total" MiB"}'\'''
#alias topf='$(which find) . $prunePathsFindExpression -xdev -type f -size +10M -exec ls -l --block-size=M --time-style=+"%Y-%m-%d %T" {} \; 2>/dev/null | sort -nrk5 | column -t | head -n | awk '\''{total+=$5;print}END{print"=> total = "total" MiB"}'\'''

function topf {
	$(which find) . $prunePathsFindExpression -xdev -type f -size +10M -exec ls -l --block-size=M --time-style=+"%Y-%m-%d %T" {} \; 2>/dev/null | sort -nrk5 | column -t | head -n "$1" | awk '{total+=$5;print}END{print"=> total = "total" MiB"}'
}
#alias topflines='$(which find) . $prunePathsFindExpression -xdev -type f -size +10M -exec ls -l --block-size=M --time-style=+"%Y-%m-%d %T" {} \; 2>/dev/null | sort -nrk5 | column -t | head -n $(($LINES-4)) | awk '\''{total+=$5;print}END{print"=> total = "total" MiB"}'\'''
function topflines {
	$(which find) "$@" $prunePathsFindExpression -xdev -type f -size +10M -exec ls -l --block-size=M --time-style=+"%Y-%m-%d %T" {} \; 2>/dev/null | sort -nrk5 | column -t | head -n $(($LINES-4)) | awk '{total+=$5;print}END{if(total) print"=> total = "total" MiB"}'
}


if groups 2>/dev/null | egrep -wq "sudo|admin"
then
	test -f /etc/debian_version && Source $initDir/.bash_aliases.Debian
	alias checkSudoFile="\visudo -cf"
	alias cupsRestart="pgrep -a cupsd;\sudo killall -HUP cupsd;sleep 1;pgrep -a cupsd"
	alias nmRestart="sudo service network-manager restart"
	alias pgrep="\pgrep -lf"
	alias pipInstall=pip2Install
	alias pip2Install="curl -s https://bootstrap.pypa.io/get-pip.py | sudo -H python2"
	alias pip3Install="curl -s https://bootstrap.pypa.io/get-pip.py | sudo -H python3"
	alias restart_nm="sudo service network-manager restart"
	alias rtmpdumprd='\sudo iptables -t nat -A OUTPUT -p tcp --dport 1935 -m owner \! --uid-owner root -j REDIRECT'
	alias rtmpdumprs='\sudo iptables -t nat -D OUTPUT -p tcp --dport 1935 -m owner \! --uid-owner root -j REDIRECT'
	alias sudo="\sudo "
	alias testLiveUSB_BIOS="sudo -b \kvm -m 1G -boot menu=on -hda"
	alias testLiveUSB_UEFI="sudo -b \kvm -m 1G -bios /usr/share/qemu/OVMF.fd -hda"
	alias update-mime-database="\sudo \rm -vf /usr/share/mime/packages/kde.xml;time sudo \update-mime-database /usr/share/mime"
	alias updatedb="time sudo $(which updatedb 2>/dev/null)"
	alias wifiList="which nmcli >/dev/null && nmcli dev wifi list || sudo iw dev $wifiInterface scan || sudo iwlist $wifiInterface scan"
	alias youtube-dlUpdate="\sudo -H $(which pip3) install -U youtube-dl"
	alias ytdlUpdate="\sudo -H $(which pip3) install -U youtube-dl"
fi

set +x
test "$debug" '>' 0 && echo "=> END of $bold${colors[blue]}$(basename ${BASH_SOURCE[0]})$normal"
