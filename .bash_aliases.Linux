# vim: set ft=bash noet:

declare -A | grep -wq colors || source $initDir/.colors
test "$debug" -gt 0 && \echo "=> Running $bold${colors[blue]}$(basename ${BASH_SOURCE[0]})$normal ..."

wifiInterface=$(iw dev 2>/dev/null | awk '/Interface/{lastInterface=$NF}END{print lastInterface}')
test "$wifiInterface" || wifiInterface="$(iwconfig 2>/dev/null | awk '/^[^ \t]/ { if ($1 ~ /^[0-9]+:/) { lastInterface=$2 } else { lastInterface=$1 } }END{print lastInterface}')"

#alias lpr="\lpr -P ppti-14-503-imp -o PageSize=A4 -o PageRegion=A4 -o Resolution=default -o InputSlot=Tray2 -o Duplex=DuplexNoTumble -o PreFilter=No"
#alias lpr="\lpr -o PageSize=A4 -o PageRegion=A4 -o Resolution=default -o InputSlot=Tray2 -o Duplex=DuplexNoTumble -o PreFilter=No"

findExcludedPathList="./proc ./sys ./dev"
prunePathsFindExpression=$(printf -- "-path %s -prune -o " $findExcludedPathList)
duExcludedPathList="./proc ./sys ./dev"
excludePathsDuExpression=$(printf -- "--exclude %s " $duExcludedPathList)
find="command find"

#test "$wifiInterface" && alias wifiList="which nmcli >/dev/null && \nmcli dev wifi list"
test "$wifiInterface" && alias wifiSpeed="\iwlist $wifiInterface bitrate;\iw dev $wifiInterface link"
test "$wifiInterface" && alias restartWifi="which nmcli >/dev/null && \nmcli nm wifi off;nmcli nm wifi on;sleep 10;wanip"
test "$wifiInterface" && alias wifiRestart=restartWifi
set +x

which lspci >/dev/null && {
	alias lspci="\lspci -nn"
	alias lsgpu="\lspci -nns \$(\lspci | awk '/Display|VGA/{print\$1}')"
	alias northBridge="\lspci -nnvs 0:0.0 | egrep '^00:|Kernel|Subsystem'"
	alias southBridge="\lspci | awk '/ISA bridge/{print \"lspci -nnvs \" \$1}' | sh | egrep '^00:|Kernel|Subsystem'"
	alias lsvga=lsgpu
}

alias brewUnInstall='\ruby -e "$(\curl -fsSL https://raw.githubusercontent.com/Linuxbrew/install/master/uninstall)"'
alias catFiles="\tail -vn +1"
alias connect2MyHiddenWifi="set -x;nmcli con status;time nmcli con up id sebWlan && wanip;nmcli con status;set +x"
alias connect2Bbox="set -x;nmcli con status;time nmcli con up id sebBbox-5GHz && wanip;nmcli con status;set +x"
alias connect2eduroam="set -x;nmcli con status;time nmcli con up id eduroam && wanip;nmcli con status;set +x"
alias cp='\cp --preserve=timestamps -uv'
alias df="\df -PTh"
alias dnsInfo="\nmcli | sed -n '/^DNS /,+3p'"
#which ccze >/dev/null 2>&1 && alias ccze="\ccze -A" && alias dmesg="\ccze -A < /var/log/dmesg"
#alias dmesg="\grc less /var/log/dmesg"
alias findDeadLinks='command find . -xtype l -exec ls --color -l {} +'
alias firefoxDefrag='pgrep firefox || time $(which find) ~/.mozilla/firefox/ -name "*sqlite" -ls -exec sqlite3 -echo {} vacuum \;'
alias l="ls --color"
alias lastme='last -w $USER | \grep $USER'
alias lastmeToday='last $USER | \grep "$USER.*$(LC_TIME=C date +%b\ %_d)"'
alias ll="ls -blF --time-style=+'%Y-%m-%d %T'"
alias llk="ll --block-size=K"
alias llm="ll --block-size=M"
alias ls="ls --color -F"
alias mmcSize="awk '/[0-9]/{print FILENAME\": \"\$1/(2*1024^2)\" GiB\"}' /sys/class/block/mmcblk?/size"
alias mmcInfo="tail -vn +1 /sys/class/block/mmcblk0/device/driver/mmc*/uevent"
alias nmStatus="\service network-manager status"
alias odtinfo=odfInfo
alias osFamily='uname -o'
alias osID="awk -F= '/^ID=/{print\$2}' /etc/os-release"
alias osID_LIKE="awk -F= '/^ID_LIKE=/{print\$2}' /etc/os-release"
alias osVersion=version
alias pip_pypy="\pypy -m pip"
alias pip_pypy3="\pypy3 -m pip"
alias Pgrep="grep -P"
alias quota="\quota -s"
alias rename="\prename -v"
alias rgrep='time grep -Ir --exclude-dir=.git'
alias rgrepFollowSymLinks='time grep -IR --exclude-dir=.git'
alias rmdir="\rmdir -v"
alias rsync='time \rsync -uth -P -z --skip-compress=$RSYNC_SKIP_COMPRESS_LIST $RSYNC_EXCLUSION'
alias scp='time \rsync -h --progress -u -zt --skip-compress=$RSYNC_SKIP_COMPRESS_LIST $RSYNC_EXCLUSION'
alias sed="\sed -r" # La completion ssh ne fonctionne pas si l'alias est actif a cause du script /usr/share/bash-completion/bash_completion qui est obsolete, faire une maj du package bash_completion vers la v2.8
#alias halt="\systemctl halt && exit"
alias poweroff="\systemctl poweroff && exit"
alias reboot="\systemctl reboot && exit"
alias suspend="\systemctl suspend && exit"
#alias topf='$(which find) . -xdev $prunePathsFindExpression -type f -size +10M -exec ls -l --block-size=M --time-style=+"%Y-%m-%d %T" {} \; 2>/dev/null | sort -nrk5 | head -n | awk '\''{total+=$5;print}END{print"=> total = "total" MiB"}'\'' | column -t'
#alias topf10='$(which find) . -xdev $prunePathsFindExpression -type f -size +10M -exec ls -l --block-size=M --time-style=+"%Y-%m-%d %T" {} \; 2>/dev/null | sort -nrk5 | head -10 | awk '\''{total+=$5;print}END{print"=> total = "total" MiB"}'\'' | column -t'
#alias topf50='$(which find) . -xdev $prunePathsFindExpression -type f -size +10M -exec ls -l --block-size=M --time-style=+"%Y-%m-%d %T" {} \; 2>/dev/null | sort -nrk5 | head -50 | awk '\''{total+=$5;print}END{print"=> total = "total" MiB"}'\'' | column -t'
#alias topf5='$(which find) . -xdev $prunePathsFindExpression -type f -size +10M -exec ls -l --block-size=M --time-style=+"%Y-%m-%d %T" {} \; 2>/dev/null | sort -nrk5 |  head -5 | awk '\''{total+=$5;print}END{print"=> total = "total" MiB"}'\'' | column -t'
alias topf10='$(which find) . -xdev $prunePathsFindExpression -type f -size +10M -exec ls -l --block-size=M --time-style=+"%Y-%m-%d %T" {} \; 2>/dev/null | sort -nrk5 | head -10 | numfmt --field 5 --from=iec --to=iec-i --suffix=B | column -t'
alias topf50='$(which find) . -xdev $prunePathsFindExpression -type f -size +10M -exec ls -l --block-size=M --time-style=+"%Y-%m-%d %T" {} \; 2>/dev/null | sort -nrk5 | head -50 | numfmt --field 5 --from=iec --to=iec-i --suffix=B | column -t'
alias topf5='$(which find) . -xdev $prunePathsFindExpression -type f -size +10M -exec ls -l --block-size=M --time-style=+"%Y-%m-%d %T" {} \; 2>/dev/null | sort -nrk5 |  head -5  | numfmt --field 5 --from=iec --to=iec-i --suffix=B | column -t'
alias version="\lsb_release -sd"
alias wifimac="\ifconfig $wifiInterface | awk '/HWaddr/{print\$1\"\\t\"\$NF}'"
alias wlanmac=wifimac
alias xdg-dirs='ls $HOME/.config/user-dirs.dirs && grep ^XDG $HOME/.config/user-dirs.dirs'
alias ytdlInstall="pip3 install youtube-dl || pip install youtube-dl"

if groups 2>/dev/null | \egrep -wq "sudo|admin"
then
	test -r $initDir/.bash_aliases.$osID_LIKE && Source $initDir/.bash_aliases.$osID_LIKE # Si c'est un Linux de type Debian ou Redhat
	alias checkSudoFile="\visudo -cf"
	alias cupsRestart="pgrep -a cupsd;\sudo killall -HUP cupsd;sleep 1;pgrep -a cupsd"
	alias dosfsck="\dosfsck -r"
	alias lvextend="\lvextend -r"
	alias lvreduce="\lvreduce -r"
	alias lvresize="\lvresize -r"
	alias nmRestart="sudo service network-manager restart"
	alias pgrep="\pgrep -lf"
	alias pipInstall=pip2Install
	alias pip2Install="curl -s https://bootstrap.pypa.io/get-pip.py | sudo -H python2"
	alias pip3Install="curl -s https://bootstrap.pypa.io/get-pip.py | sudo -H python3"
	alias pipUpdate=pip2Update
	alias pip2Update="\sudo -H $(which pip2) install -U pip || \sudo -H $(which pip) install U pip"
	alias pip3Update="\sudo -H $(which pip3) install -U pip || \sudo -H $(which pip) install -U pip"
	alias restart_nm="sudo service network-manager restart"
	alias rtmpdumprd='\sudo iptables -t nat -A OUTPUT -p tcp --dport 1935 -m owner \! --uid-owner root -j REDIRECT'
	alias rtmpdumprs='\sudo iptables -t nat -D OUTPUT -p tcp --dport 1935 -m owner \! --uid-owner root -j REDIRECT'
	alias testLiveUSB_BIOS="sudo -b \kvm -m 1G -boot menu=on -hda"
	alias testLiveUSB_UEFI="sudo -b \kvm -m 1G -bios /usr/share/qemu/OVMF.fd -hda"
	alias update-mime-database="\sudo \rm -vf /usr/share/mime/packages/kde.xml;time sudo \update-mime-database /usr/share/mime"
	alias updatedb="time sudo $(which updatedb 2>/dev/null)"
	alias youtube-dlUpdate='\sudo -H $(which pip3) install -U youtube-dl || \sudo -H $(which pip) install -U youtube-dl'
	alias ytdlInstall='\sudo -H $(which pip3) install youtube-dl || \sudo -H $(which pip) install youtube-dl'
else
	alias updatedb='time updatedb -l 0 -o ~/.local/lib/mlocate/mlocate.db --prunefs "rpc_pipefs afs binfmt_misc proc smbfs iso9660 ncpfs coda devpts ftpfs devfs mfs shfs sysfs cifs lustre tmpfs usbfs udf fuse.glusterfs fuse.sshfs curlftpfs"'
fi

set +x
test "$debug" -gt 0 && \echo "=> END of $bold${colors[blue]}$(basename ${BASH_SOURCE[0]})$normal"
